`ifndef CFS_ALGN_TEST_RANDOM_SV
  `define CFS_ALGN_TEST_RANDOM_SV

  class md_algn_test_random extends algn_test_base;

    `uvm_component_utils(md_algn_test_random)
    
    function new(string name = "", uvm_component parent);
      super.new(name, parent);
    endfunction
    
    virtual task run_phase(uvm_phase phase);
      phase.raise_objection(this, "TEST_DONE");
      
      #(100ns);
      
      fork
        begin
          md_sequence_slave_response_forever seq = md_sequence_slave_response_forever::type_id::create("seq");
          
          seq.start(env.agent_SLAVE.sequencer);
        end
      join_none
      
      repeat(4) begin
        md_sequence_simple_master seq_simple = md_sequence_simple_master::type_id::create("seq_simple");
        seq_simple.set_sequencer(env.agent_MASTER.sequencer);

        void'(seq_simple.randomize());

        seq_simple.start(env.agent_MASTER.sequencer);
      end
      
      #(500ns);
      
      `uvm_info("DEBUG", "this is the end of the test", UVM_LOW)
      
      phase.drop_objection(this, "TEST_DONE"); 
    endtask
    
  endclass

`endif
